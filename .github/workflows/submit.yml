name: Submit
on:
  pull_request:
    branches:
      - 'develop'
      - 'main'
    types:
      - 'closed'

jobs:
  update:
    name: EAS Updates
    runs-on: ubuntu-latest
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Initialize the git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set CHANNEL env to define the deploy environment
        run: |
          if [[ github.head_ref || github.ref_name == 'develop' ]]; then
              export CHANNEL=staging
          else
              export CHANNEL=production
          fi
          echo "CHANNEL=$CHANNEL" >> "$GITHUB_ENV"

      - name: Set BUMP_TYPE env for a minor or patch update
        if: env.CHANNEL == 'staging'
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          if [[ $GITHUB_REF == refs/heads/feature/*  ]]; then
              export BUMP_TYPE=feature
          else
              export BUMP_TYPE=fix
          fi
          echo "BUMP_TYPE=$BUMP_TYPE" >> "$GITHUB_ENV"

      - name: Update version
        if: env.CHANNEL == 'staging'
        run: |
          new_version=$(node -e "process.stdout.write(require('./buildNumber.js')('${{ env.BUMP_TYPE }}'))")
          yarn version --new-version "$new_version" --no-git-tag-version

      - name: Install dependencies
        uses: ./.github/actions/eas

      - name: Set HAS_NATIVE_CHANGES env for native code changes
        run: |
          if git diff --name-only HEAD^..HEAD | grep --quiet package.json
          echo "HAS_NATIVE_CHANGES=$HAS_NATIVE_CHANGES" >> "$GITHUB_ENV"

      - name: Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build native app
        if: env.HAS_NATIVE_CHANGES == 'true'
        run: eas build --profile ${{ env.CHANNEL }} --platform all --non-interactive --no-wait --auto-submit

      - name: Build OTA update
        run: eas update --branch ${{ env.CHANNEL }} --message "Up the app dev" --auto

      - name: GIT Commit version update
        if: env.CHANNEL == 'staging'
        run: |
          git config user.name ${{ secrets.GIT_AUTHOR_NAME }}
          git config user.email ${{ secrets.GIT_AUTHOR_EMAIL }}
          git commit -a -m "versioning app"
          git push -f origin HEAD:${{ github.head_ref || github.ref_name }}
